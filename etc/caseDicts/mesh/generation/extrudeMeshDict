/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      extrudeMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

constructFrom    patch;
/*
patch:   patch of sourceCase
mesh:    patch of sourceCase, retaining original mesh
surface: surface geometry file
*/

sourceCase       "$FOAM_CASE";   // uses current case; can be a separate case
sourcePatches    (front);
// surface       "geometry.obj"; // constructFrom surface

// constructFrom patch: name of exposed "original" patch
exposedPatchName back;

flipNormals      false;

// Merge front and back patches, typically for 360 deg wedge extrusion
mergeFaces       false;
mergeTol         0;

extrudeModel     plane;
/*
plane:           single-layer, point-normal extrusion with empty type (2D)
linearNormal:    linear extrusion in point-normal direction
linearDirection: linear extrusion in specified direction
wedge:           single-layer, wedge extrusion with wedge type (axisymmetric)
sector:          sector extrusion about specified axis
linearRadial:    linear extrusion in radial direction
sphericalRadial: spherical radial extrusion with radii function
*/

planeCoeffs
{
    thickness    0.5;
}

linearNormalCoeffs
{
    nLayers      10;
    expansionRatio 1.0;
    thickness    0.5;
}

linearDirectionCoeffs
{
    nLayers      10;
    expansionRatio 1.0;
    direction    (0 1 0);
    thickness    0.5;
}

wedgeCoeffs
{
    axisPt       (0 0 0);
    axis         (1 0 0);
    angle        5;
}

sectorCoeffs
{
    nLayers      10;
    expansionRatio 1.0;
    axisPt       (0 0 0);
    axis         (1 0 0);
    angle        360;
}

linearRadialCoeffs
{
    nLayers      10;
    expansionRatio 1.0;
    R            0.5;
    Rsurface     0.1;
}

sphericalRadialCoeffs
{
    nLayers      10;
    expansionRatio 1.0;
    R            table ((0 0.01) (3 0.03) (10 0.1));
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
